/*
 * generated by Xtext 2.12.0
 */
grammar InternalMDML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.ox.cs.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.ox.cs.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.ox.cs.services.MDMLGrammarAccess;

}
@parser::members {
	private MDMLGrammarAccess grammarAccess;

	public void setGrammarAccess(MDMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDomainRegistry
entryRuleDomainRegistry
:
{ before(grammarAccess.getDomainRegistryRule()); }
	 ruleDomainRegistry
{ after(grammarAccess.getDomainRegistryRule()); } 
	 EOF 
;

// Rule DomainRegistry
ruleDomainRegistry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainRegistryAccess().getRegisteredItemsAssignment()); }
		(rule__DomainRegistry__RegisteredItemsAssignment)*
		{ after(grammarAccess.getDomainRegistryAccess().getRegisteredItemsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataModel
entryRuleDataModel
:
{ before(grammarAccess.getDataModelRule()); }
	 ruleDataModel
{ after(grammarAccess.getDataModelRule()); } 
	 EOF 
;

// Rule DataModel
ruleDataModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataModelAccess().getGroup()); }
		(rule__DataModel__Group__0)
		{ after(grammarAccess.getDataModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataItem
entryRuleDataItem
:
{ before(grammarAccess.getDataItemRule()); }
	 ruleDataItem
{ after(grammarAccess.getDataItemRule()); } 
	 EOF 
;

// Rule DataItem
ruleDataItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataItemAccess().getDataitemAssignment()); }
		(rule__DataItem__DataitemAssignment)
		{ after(grammarAccess.getDataItemAccess().getDataitemAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleREFINE
entryRuleREFINE
:
{ before(grammarAccess.getREFINERule()); }
	 ruleREFINE
{ after(grammarAccess.getREFINERule()); } 
	 EOF 
;

// Rule REFINE
ruleREFINE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getREFINEAccess().getAlternatives()); }
		(rule__REFINE__Alternatives)?
		{ after(grammarAccess.getREFINEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleREFINES
entryRuleREFINES
:
{ before(grammarAccess.getREFINESRule()); }
	 ruleREFINES
{ after(grammarAccess.getREFINESRule()); } 
	 EOF 
;

// Rule REFINES
ruleREFINES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getREFINESAccess().getGroup()); }
		(rule__REFINES__Group__0)
		{ after(grammarAccess.getREFINESAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOESNOTREFINE
entryRuleDOESNOTREFINE
:
{ before(grammarAccess.getDOESNOTREFINERule()); }
	 ruleDOESNOTREFINE
{ after(grammarAccess.getDOESNOTREFINERule()); } 
	 EOF 
;

// Rule DOESNOTREFINE
ruleDOESNOTREFINE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOESNOTREFINEAccess().getGroup()); }
		(rule__DOESNOTREFINE__Group__0)
		{ after(grammarAccess.getDOESNOTREFINEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getGroup()); }
		(rule__Path__Group__0)
		{ after(grammarAccess.getPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGUID
entryRuleGUID
:
{ before(grammarAccess.getGUIDRule()); }
	 ruleGUID
{ after(grammarAccess.getGUIDRule()); } 
	 EOF 
;

// Rule GUID
ruleGUID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGUIDAccess().getGroup()); }
		(rule__GUID__Group__0)
		{ after(grammarAccess.getGUIDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVersion
entryRuleVersion
:
{ before(grammarAccess.getVersionRule()); }
	 ruleVersion
{ after(grammarAccess.getVersionRule()); } 
	 EOF 
;

// Rule Version
ruleVersion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVersionAccess().getGroup()); }
		(rule__Version__Group__0)
		{ after(grammarAccess.getVersionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReference
entryRuleReference
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceAccess().getGroup()); }
		(rule__Reference__Group__0)
		{ after(grammarAccess.getReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationSource
entryRuleRelationSource
:
{ before(grammarAccess.getRelationSourceRule()); }
	 ruleRelationSource
{ after(grammarAccess.getRelationSourceRule()); } 
	 EOF 
;

// Rule RelationSource
ruleRelationSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationSourceAccess().getAlternatives()); }
		(rule__RelationSource__Alternatives)
		{ after(grammarAccess.getRelationSourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationDestination
entryRuleRelationDestination
:
{ before(grammarAccess.getRelationDestinationRule()); }
	 ruleRelationDestination
{ after(grammarAccess.getRelationDestinationRule()); } 
	 EOF 
;

// Rule RelationDestination
ruleRelationDestination 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationDestinationAccess().getAlternatives()); }
		(rule__RelationDestination__Alternatives)
		{ after(grammarAccess.getRelationDestinationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationship
entryRuleRelationship
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationshipAccess().getGroup()); }
		(rule__Relationship__Group__0)
		{ after(grammarAccess.getRelationshipAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtensionItem
entryRuleExtensionItem
:
{ before(grammarAccess.getExtensionItemRule()); }
	 ruleExtensionItem
{ after(grammarAccess.getExtensionItemRule()); } 
	 EOF 
;

// Rule ExtensionItem
ruleExtensionItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtensionItemAccess().getGroup()); }
		(rule__ExtensionItem__Group__0)
		{ after(grammarAccess.getExtensionItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumeratedType
entryRuleEnumeratedType
:
{ before(grammarAccess.getEnumeratedTypeRule()); }
	 ruleEnumeratedType
{ after(grammarAccess.getEnumeratedTypeRule()); } 
	 EOF 
;

// Rule EnumeratedType
ruleEnumeratedType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumeratedTypeAccess().getGroup()); }
		(rule__EnumeratedType__Group__0)
		{ after(grammarAccess.getEnumeratedTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceType
entryRuleReferenceType
:
{ before(grammarAccess.getReferenceTypeRule()); }
	 ruleReferenceType
{ after(grammarAccess.getReferenceTypeRule()); } 
	 EOF 
;

// Rule ReferenceType
ruleReferenceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceTypeAccess().getGroup()); }
		(rule__ReferenceType__Group__0)
		{ after(grammarAccess.getReferenceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup()); }
		(rule__PrimitiveType__Group__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasic
entryRuleBasic
:
{ before(grammarAccess.getBasicRule()); }
	 ruleBasic
{ after(grammarAccess.getBasicRule()); } 
	 EOF 
;

// Rule Basic
ruleBasic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicAccess().getTypenameAssignment()); }
		(rule__Basic__TypenameAssignment)
		{ after(grammarAccess.getBasicAccess().getTypenameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainerElement
entryRuleContainerElement
:
{ before(grammarAccess.getContainerElementRule()); }
	 ruleContainerElement
{ after(grammarAccess.getContainerElementRule()); } 
	 EOF 
;

// Rule ContainerElement
ruleContainerElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerElementAccess().getAlternatives()); }
		(rule__ContainerElement__Alternatives)
		{ after(grammarAccess.getContainerElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataClass
entryRuleDataClass
:
{ before(grammarAccess.getDataClassRule()); }
	 ruleDataClass
{ after(grammarAccess.getDataClassRule()); } 
	 EOF 
;

// Rule DataClass
ruleDataClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataClassAccess().getGroup()); }
		(rule__DataClass__Group__0)
		{ after(grammarAccess.getDataClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataElement
entryRuleDataElement
:
{ before(grammarAccess.getDataElementRule()); }
	 ruleDataElement
{ after(grammarAccess.getDataElementRule()); } 
	 EOF 
;

// Rule DataElement
ruleDataElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataElementAccess().getGroup()); }
		(rule__DataElement__Group__0)
		{ after(grammarAccess.getDataElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatus
entryRuleStatus
:
{ before(grammarAccess.getStatusRule()); }
	 ruleStatus
{ after(grammarAccess.getStatusRule()); } 
	 EOF 
;

// Rule Status
ruleStatus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatusAccess().getAlternatives()); }
		(rule__Status__Alternatives)
		{ after(grammarAccess.getStatusAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup()); }
		(rule__Constraint__Group__0)
		{ after(grammarAccess.getConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup()); }
		(rule__Predicate__Group__0)
		{ after(grammarAccess.getPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataItem__DataitemAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataItemAccess().getDataitemDataModelParserRuleCall_0_0()); }
		ruleDataModel
		{ after(grammarAccess.getDataItemAccess().getDataitemDataModelParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataItemAccess().getDataitemDataClassParserRuleCall_0_1()); }
		ruleDataClass
		{ after(grammarAccess.getDataItemAccess().getDataitemDataClassParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataItemAccess().getDataitemDataElementParserRuleCall_0_2()); }
		ruleDataElement
		{ after(grammarAccess.getDataItemAccess().getDataitemDataElementParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataItemAccess().getDataitemDataTypeParserRuleCall_0_3()); }
		ruleDataType
		{ after(grammarAccess.getDataItemAccess().getDataitemDataTypeParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataItemAccess().getDataitemImportParserRuleCall_0_4()); }
		ruleImport
		{ after(grammarAccess.getDataItemAccess().getDataitemImportParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataItemAccess().getDataitemExtensionItemParserRuleCall_0_5()); }
		ruleExtensionItem
		{ after(grammarAccess.getDataItemAccess().getDataitemExtensionItemParserRuleCall_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REFINE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREFINEAccess().getREFINESParserRuleCall_0()); }
		ruleREFINES
		{ after(grammarAccess.getREFINEAccess().getREFINESParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getREFINEAccess().getDOESNOTREFINEParserRuleCall_1()); }
		ruleDOESNOTREFINE
		{ after(grammarAccess.getREFINEAccess().getDOESNOTREFINEParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGUIDAccess().getGroup_1_0()); }
		(rule__GUID__Group_1_0__0)
		{ after(grammarAccess.getGUIDAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getGUIDAccess().getGroup_1_1()); }
		(rule__GUID__Group_1_1__0)
		{ after(grammarAccess.getGUIDAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationSource__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationSourceAccess().getDataModelParserRuleCall_0()); }
		ruleDataModel
		{ after(grammarAccess.getRelationSourceAccess().getDataModelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSourceAccess().getDataClassParserRuleCall_1()); }
		ruleDataClass
		{ after(grammarAccess.getRelationSourceAccess().getDataClassParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSourceAccess().getDataElementParserRuleCall_2()); }
		ruleDataElement
		{ after(grammarAccess.getRelationSourceAccess().getDataElementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationSourceAccess().getDataTypeParserRuleCall_3()); }
		ruleDataType
		{ after(grammarAccess.getRelationSourceAccess().getDataTypeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDestination__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationDestinationAccess().getDataModelParserRuleCall_0()); }
		ruleDataModel
		{ after(grammarAccess.getRelationDestinationAccess().getDataModelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationDestinationAccess().getDataClassParserRuleCall_1()); }
		ruleDataClass
		{ after(grammarAccess.getRelationDestinationAccess().getDataClassParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationDestinationAccess().getDataElementParserRuleCall_2()); }
		ruleDataElement
		{ after(grammarAccess.getRelationDestinationAccess().getDataElementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationDestinationAccess().getDataTypeParserRuleCall_3()); }
		ruleDataType
		{ after(grammarAccess.getRelationDestinationAccess().getDataTypeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getDataTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getReferenceTypeParserRuleCall_1()); }
		ruleReferenceType
		{ after(grammarAccess.getDataTypeAccess().getReferenceTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getEnumeratedTypeParserRuleCall_2()); }
		ruleEnumeratedType
		{ after(grammarAccess.getDataTypeAccess().getEnumeratedTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Basic__TypenameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicAccess().getTypenameSTRINGKeyword_0_0()); }
		'STRING'
		{ after(grammarAccess.getBasicAccess().getTypenameSTRINGKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicAccess().getTypenameINTKeyword_0_1()); }
		'INT'
		{ after(grammarAccess.getBasicAccess().getTypenameINTKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicAccess().getTypenameBOOLEANKeyword_0_2()); }
		'BOOLEAN'
		{ after(grammarAccess.getBasicAccess().getTypenameBOOLEANKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerElementAccess().getDataClassParserRuleCall_0()); }
		ruleDataClass
		{ after(grammarAccess.getContainerElementAccess().getDataClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getContainerElementAccess().getDataElementParserRuleCall_1()); }
		ruleDataElement
		{ after(grammarAccess.getContainerElementAccess().getDataElementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getContainerElementAccess().getReferenceParserRuleCall_2()); }
		ruleReference
		{ after(grammarAccess.getContainerElementAccess().getReferenceParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Status__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatusAccess().getDraftKeyword_0()); }
		'draft'
		{ after(grammarAccess.getStatusAccess().getDraftKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatusAccess().getFinalizedKeyword_1()); }
		'finalized'
		{ after(grammarAccess.getStatusAccess().getFinalizedKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatusAccess().getSupercededKeyword_2()); }
		'superceded'
		{ after(grammarAccess.getStatusAccess().getSupercededKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__0__Impl
	rule__DataModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getDataModelKeyword_0()); }
	'DataModel'
	{ after(grammarAccess.getDataModelAccess().getDataModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__1__Impl
	rule__DataModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getNameAssignment_1()); }
	(rule__DataModel__NameAssignment_1)
	{ after(grammarAccess.getDataModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__2__Impl
	rule__DataModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getStatusKeyword_2()); }
	'status:'
	{ after(grammarAccess.getDataModelAccess().getStatusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__3__Impl
	rule__DataModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getStatusAssignment_3()); }
	(rule__DataModel__StatusAssignment_3)
	{ after(grammarAccess.getDataModelAccess().getStatusAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__4__Impl
	rule__DataModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getDomainidKeyword_4()); }
	'domainid:'
	{ after(grammarAccess.getDataModelAccess().getDomainidKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__5__Impl
	rule__DataModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getGuidAssignment_5()); }
	(rule__DataModel__GuidAssignment_5)
	{ after(grammarAccess.getDataModelAccess().getGuidAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__6__Impl
	rule__DataModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getCommercialAtKeyword_6()); }
	'@'
	{ after(grammarAccess.getDataModelAccess().getCommercialAtKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__7__Impl
	rule__DataModel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getLeftParenthesisKeyword_7()); }
	'('
	{ after(grammarAccess.getDataModelAccess().getLeftParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__8__Impl
	rule__DataModel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getVersionParserRuleCall_8()); }
	ruleVersion
	{ after(grammarAccess.getDataModelAccess().getVersionParserRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__9__Impl
	rule__DataModel__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getDataModelAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__10__Impl
	rule__DataModel__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getRefinesAssignment_10()); }
	(rule__DataModel__RefinesAssignment_10)
	{ after(grammarAccess.getDataModelAccess().getRefinesAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__11__Impl
	rule__DataModel__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_11()); }
	'{'
	{ after(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__12__Impl
	rule__DataModel__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getElementsAssignment_12()); }
	(rule__DataModel__ElementsAssignment_12)*
	{ after(grammarAccess.getDataModelAccess().getElementsAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__13__Impl
	rule__DataModel__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getRelationsAssignment_13()); }
	(rule__DataModel__RelationsAssignment_13)*
	{ after(grammarAccess.getDataModelAccess().getRelationsAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__14__Impl
	rule__DataModel__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getConstraintAssignment_14()); }
	(rule__DataModel__ConstraintAssignment_14)*
	{ after(grammarAccess.getDataModelAccess().getConstraintAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__15__Impl
	rule__DataModel__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getPredicateAssignment_15()); }
	(rule__DataModel__PredicateAssignment_15)*
	{ after(grammarAccess.getDataModelAccess().getPredicateAssignment_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataModel__Group__16__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_16()); }
	'}'
	{ after(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__REFINES__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REFINES__Group__0__Impl
	rule__REFINES__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__REFINES__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREFINESAccess().getRefinesKeyword_0()); }
	'refines'
	{ after(grammarAccess.getREFINESAccess().getRefinesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REFINES__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REFINES__Group__1__Impl
	rule__REFINES__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__REFINES__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREFINESAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getREFINESAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REFINES__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REFINES__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__REFINES__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREFINESAccess().getPathParserRuleCall_2()); }
	rulePath
	{ after(grammarAccess.getREFINESAccess().getPathParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOESNOTREFINE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOESNOTREFINE__Group__0__Impl
	rule__DOESNOTREFINE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOESNOTREFINE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOESNOTREFINEAccess().getDoesnotrefineKeyword_0()); }
	'doesnotrefine'
	{ after(grammarAccess.getDOESNOTREFINEAccess().getDoesnotrefineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOESNOTREFINE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOESNOTREFINE__Group__1__Impl
	rule__DOESNOTREFINE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOESNOTREFINE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOESNOTREFINEAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDOESNOTREFINEAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOESNOTREFINE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOESNOTREFINE__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOESNOTREFINE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOESNOTREFINEAccess().getPathParserRuleCall_2()); }
	rulePath
	{ after(grammarAccess.getDOESNOTREFINEAccess().getPathParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__0__Impl
	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getGroup_1()); }
	(rule__Path__Group_1__0)*
	{ after(grammarAccess.getPathAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__0__Impl
	rule__Path__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); }
	'/'
	{ after(grammarAccess.getPathAccess().getSolidusKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_1()); }
	ruleQualifiedName
	{ after(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GUID__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUID__Group__0__Impl
	rule__GUID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getGUIDAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIDAccess().getAlternatives_1()); }
	(rule__GUID__Alternatives_1)*
	{ after(grammarAccess.getGUIDAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GUID__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUID__Group_1_0__0__Impl
	rule__GUID__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIDAccess().getFullStopKeyword_1_0_0()); }
	'.'
	{ after(grammarAccess.getGUIDAccess().getFullStopKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUID__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIDAccess().getIDTerminalRuleCall_1_0_1()); }
	RULE_ID
	{ after(grammarAccess.getGUIDAccess().getIDTerminalRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GUID__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUID__Group_1_1__0__Impl
	rule__GUID__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIDAccess().getSolidusKeyword_1_1_0()); }
	'/'
	{ after(grammarAccess.getGUIDAccess().getSolidusKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GUID__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GUID__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGUIDAccess().getIDTerminalRuleCall_1_1_1()); }
	RULE_ID
	{ after(grammarAccess.getGUIDAccess().getIDTerminalRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__0__Impl
	rule__Version__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getVersionAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__1__Impl
	rule__Version__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getVersionAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__2__Impl
	rule__Version__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getVersionAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__3__Impl
	rule__Version__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getVersionAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getINTTerminalRuleCall_4()); }
	RULE_INT
	{ after(grammarAccess.getVersionAccess().getINTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getRefKeyword_0()); }
	'ref'
	{ after(grammarAccess.getReferenceAccess().getRefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__1__Impl
	rule__Reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getNameAssignment_1()); }
	(rule__Reference__NameAssignment_1)
	{ after(grammarAccess.getReferenceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__2__Impl
	rule__Reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getReferenceAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getTypeAssignment_3()); }
	(rule__Reference__TypeAssignment_3)
	{ after(grammarAccess.getReferenceAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__0__Impl
	rule__Relationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getRelationshipKeyword_0()); }
	'relationship'
	{ after(grammarAccess.getRelationshipAccess().getRelationshipKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getGroup_1()); }
	(rule__Relationship__Group_1__0)
	{ after(grammarAccess.getRelationshipAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group_1__0__Impl
	rule__Relationship__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getSrcAssignment_1_0()); }
	(rule__Relationship__SrcAssignment_1_0)
	{ after(grammarAccess.getRelationshipAccess().getSrcAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group_1__1__Impl
	rule__Relationship__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getRelationshipAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relationship__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationshipAccess().getDestAssignment_1_2()); }
	(rule__Relationship__DestAssignment_1_2)
	{ after(grammarAccess.getRelationshipAccess().getDestAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionItem__Group__0__Impl
	rule__ExtensionItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionItemAccess().getExtensionKeyword_0()); }
	'extension'
	{ after(grammarAccess.getExtensionItemAccess().getExtensionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionItem__Group__1__Impl
	rule__ExtensionItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionItemAccess().getKeyAssignment_1()); }
	(rule__ExtensionItem__KeyAssignment_1)
	{ after(grammarAccess.getExtensionItemAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionItem__Group__2__Impl
	rule__ExtensionItem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionItemAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getExtensionItemAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionItem__Group__3__Impl
	rule__ExtensionItem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionItemAccess().getValueAssignment_3()); }
	(rule__ExtensionItem__ValueAssignment_3)
	{ after(grammarAccess.getExtensionItemAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionItem__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionItemAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getExtensionItemAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__0__Impl
	rule__EnumeratedType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getEnumtypeKeyword_0()); }
	'enumtype'
	{ after(grammarAccess.getEnumeratedTypeAccess().getEnumtypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__1__Impl
	rule__EnumeratedType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getStatusKeyword_1()); }
	'status:'
	{ after(grammarAccess.getEnumeratedTypeAccess().getStatusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__2__Impl
	rule__EnumeratedType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getStatusAssignment_2()); }
	(rule__EnumeratedType__StatusAssignment_2)
	{ after(grammarAccess.getEnumeratedTypeAccess().getStatusAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__3__Impl
	rule__EnumeratedType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getDomainidKeyword_3()); }
	'domainid:'
	{ after(grammarAccess.getEnumeratedTypeAccess().getDomainidKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__4__Impl
	rule__EnumeratedType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getGuidAssignment_4()); }
	(rule__EnumeratedType__GuidAssignment_4)
	{ after(grammarAccess.getEnumeratedTypeAccess().getGuidAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__5__Impl
	rule__EnumeratedType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getCommercialAtKeyword_5()); }
	'@'
	{ after(grammarAccess.getEnumeratedTypeAccess().getCommercialAtKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__6__Impl
	rule__EnumeratedType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getEnumeratedTypeAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__7__Impl
	rule__EnumeratedType__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getVersionParserRuleCall_7()); }
	ruleVersion
	{ after(grammarAccess.getEnumeratedTypeAccess().getVersionParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__8__Impl
	rule__EnumeratedType__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getEnumeratedTypeAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__9__Impl
	rule__EnumeratedType__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getRefinesAssignment_9()); }
	(rule__EnumeratedType__RefinesAssignment_9)
	{ after(grammarAccess.getEnumeratedTypeAccess().getRefinesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__10__Impl
	rule__EnumeratedType__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getNameAssignment_10()); }
	(rule__EnumeratedType__NameAssignment_10)
	{ after(grammarAccess.getEnumeratedTypeAccess().getNameAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__11__Impl
	rule__EnumeratedType__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getColonKeyword_11()); }
	':'
	{ after(grammarAccess.getEnumeratedTypeAccess().getColonKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__12__Impl
	rule__EnumeratedType__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getTypeAssignment_12()); }
	(rule__EnumeratedType__TypeAssignment_12)
	{ after(grammarAccess.getEnumeratedTypeAccess().getTypeAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getGroup_13()); }
	(rule__EnumeratedType__Group_13__0)?
	{ after(grammarAccess.getEnumeratedTypeAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumeratedType__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group_13__0__Impl
	rule__EnumeratedType__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getArrayAssignment_13_0()); }
	(rule__EnumeratedType__ArrayAssignment_13_0)
	{ after(grammarAccess.getEnumeratedTypeAccess().getArrayAssignment_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group_13__1__Impl
	rule__EnumeratedType__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getLengthAssignment_13_1()); }
	(rule__EnumeratedType__LengthAssignment_13_1)?
	{ after(grammarAccess.getEnumeratedTypeAccess().getLengthAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group_13__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumeratedType__Group_13__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__Group_13__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratedTypeAccess().getRightSquareBracketKeyword_13_2()); }
	']'
	{ after(grammarAccess.getEnumeratedTypeAccess().getRightSquareBracketKeyword_13_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__0__Impl
	rule__ReferenceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getReftypeKeyword_0()); }
	'reftype'
	{ after(grammarAccess.getReferenceTypeAccess().getReftypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__1__Impl
	rule__ReferenceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getStatusKeyword_1()); }
	'status:'
	{ after(grammarAccess.getReferenceTypeAccess().getStatusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__2__Impl
	rule__ReferenceType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getStatusAssignment_2()); }
	(rule__ReferenceType__StatusAssignment_2)
	{ after(grammarAccess.getReferenceTypeAccess().getStatusAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__3__Impl
	rule__ReferenceType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getDomainidKeyword_3()); }
	'domainid:'
	{ after(grammarAccess.getReferenceTypeAccess().getDomainidKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__4__Impl
	rule__ReferenceType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getGuidAssignment_4()); }
	(rule__ReferenceType__GuidAssignment_4)
	{ after(grammarAccess.getReferenceTypeAccess().getGuidAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__5__Impl
	rule__ReferenceType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getCommercialAtKeyword_5()); }
	'@'
	{ after(grammarAccess.getReferenceTypeAccess().getCommercialAtKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__6__Impl
	rule__ReferenceType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getReferenceTypeAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__7__Impl
	rule__ReferenceType__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getVersionParserRuleCall_7()); }
	ruleVersion
	{ after(grammarAccess.getReferenceTypeAccess().getVersionParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__8__Impl
	rule__ReferenceType__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getReferenceTypeAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__9__Impl
	rule__ReferenceType__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getRefinesAssignment_9()); }
	(rule__ReferenceType__RefinesAssignment_9)
	{ after(grammarAccess.getReferenceTypeAccess().getRefinesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__10__Impl
	rule__ReferenceType__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getNameAssignment_10()); }
	(rule__ReferenceType__NameAssignment_10)
	{ after(grammarAccess.getReferenceTypeAccess().getNameAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__11__Impl
	rule__ReferenceType__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getColonKeyword_11()); }
	':'
	{ after(grammarAccess.getReferenceTypeAccess().getColonKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceType__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceTypeAccess().getTypeAssignment_12()); }
	(rule__ReferenceType__TypeAssignment_12)
	{ after(grammarAccess.getReferenceTypeAccess().getTypeAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group__0__Impl
	rule__PrimitiveType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeAction_0()); }
	()
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_1()); }
	(rule__PrimitiveType__Group_1__0)
	{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__0__Impl
	rule__PrimitiveType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getDatatypeKeyword_1_0()); }
	'datatype'
	{ after(grammarAccess.getPrimitiveTypeAccess().getDatatypeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__1__Impl
	rule__PrimitiveType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getStatusKeyword_1_1()); }
	'status:'
	{ after(grammarAccess.getPrimitiveTypeAccess().getStatusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__2__Impl
	rule__PrimitiveType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getStatusAssignment_1_2()); }
	(rule__PrimitiveType__StatusAssignment_1_2)
	{ after(grammarAccess.getPrimitiveTypeAccess().getStatusAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__3__Impl
	rule__PrimitiveType__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getDomainidKeyword_1_3()); }
	'domainid:'
	{ after(grammarAccess.getPrimitiveTypeAccess().getDomainidKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__4__Impl
	rule__PrimitiveType__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getGuidAssignment_1_4()); }
	(rule__PrimitiveType__GuidAssignment_1_4)
	{ after(grammarAccess.getPrimitiveTypeAccess().getGuidAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__5__Impl
	rule__PrimitiveType__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getCommercialAtKeyword_1_5()); }
	'@'
	{ after(grammarAccess.getPrimitiveTypeAccess().getCommercialAtKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__6__Impl
	rule__PrimitiveType__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getLeftParenthesisKeyword_1_6()); }
	'('
	{ after(grammarAccess.getPrimitiveTypeAccess().getLeftParenthesisKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__7__Impl
	rule__PrimitiveType__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getVersionParserRuleCall_1_7()); }
	ruleVersion
	{ after(grammarAccess.getPrimitiveTypeAccess().getVersionParserRuleCall_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__8__Impl
	rule__PrimitiveType__Group_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getRightParenthesisKeyword_1_8()); }
	')'
	{ after(grammarAccess.getPrimitiveTypeAccess().getRightParenthesisKeyword_1_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__9__Impl
	rule__PrimitiveType__Group_1__10
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getRefinesAssignment_1_9()); }
	(rule__PrimitiveType__RefinesAssignment_1_9)
	{ after(grammarAccess.getPrimitiveTypeAccess().getRefinesAssignment_1_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__10__Impl
	rule__PrimitiveType__Group_1__11
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getNameAssignment_1_10()); }
	(rule__PrimitiveType__NameAssignment_1_10)
	{ after(grammarAccess.getPrimitiveTypeAccess().getNameAssignment_1_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__11__Impl
	rule__PrimitiveType__Group_1__12
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getColonKeyword_1_11()); }
	':'
	{ after(grammarAccess.getPrimitiveTypeAccess().getColonKeyword_1_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__12__Impl
	rule__PrimitiveType__Group_1__13
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getTypeAssignment_1_12()); }
	(rule__PrimitiveType__TypeAssignment_1_12)
	{ after(grammarAccess.getPrimitiveTypeAccess().getTypeAssignment_1_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group_1__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getRuleAssignment_1_13()); }
	(rule__PrimitiveType__RuleAssignment_1_13)?
	{ after(grammarAccess.getPrimitiveTypeAccess().getRuleAssignment_1_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__0__Impl
	rule__DataClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getDataClassKeyword_0()); }
	'DataClass'
	{ after(grammarAccess.getDataClassAccess().getDataClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__1__Impl
	rule__DataClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getStatusKeyword_1()); }
	'status:'
	{ after(grammarAccess.getDataClassAccess().getStatusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__2__Impl
	rule__DataClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getStatusAssignment_2()); }
	(rule__DataClass__StatusAssignment_2)
	{ after(grammarAccess.getDataClassAccess().getStatusAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__3__Impl
	rule__DataClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getDomainidKeyword_3()); }
	'domainid:'
	{ after(grammarAccess.getDataClassAccess().getDomainidKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__4__Impl
	rule__DataClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getGuidAssignment_4()); }
	(rule__DataClass__GuidAssignment_4)
	{ after(grammarAccess.getDataClassAccess().getGuidAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__5__Impl
	rule__DataClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getCommercialAtKeyword_5()); }
	'@'
	{ after(grammarAccess.getDataClassAccess().getCommercialAtKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__6__Impl
	rule__DataClass__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getDataClassAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__7__Impl
	rule__DataClass__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getVersionParserRuleCall_7()); }
	ruleVersion
	{ after(grammarAccess.getDataClassAccess().getVersionParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__8__Impl
	rule__DataClass__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getDataClassAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__9__Impl
	rule__DataClass__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getRefinesAssignment_9()); }
	(rule__DataClass__RefinesAssignment_9)
	{ after(grammarAccess.getDataClassAccess().getRefinesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__10__Impl
	rule__DataClass__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getNameAssignment_10()); }
	(rule__DataClass__NameAssignment_10)
	{ after(grammarAccess.getDataClassAccess().getNameAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__11__Impl
	rule__DataClass__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getLeftCurlyBracketKeyword_11()); }
	'{'
	{ after(grammarAccess.getDataClassAccess().getLeftCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__12__Impl
	rule__DataClass__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getDataelementsAssignment_12()); }
	(rule__DataClass__DataelementsAssignment_12)*
	{ after(grammarAccess.getDataClassAccess().getDataelementsAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__13__Impl
	rule__DataClass__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getExtensionAssignment_13()); }
	(rule__DataClass__ExtensionAssignment_13)*
	{ after(grammarAccess.getDataClassAccess().getExtensionAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataClass__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataClassAccess().getRightCurlyBracketKeyword_14()); }
	'}'
	{ after(grammarAccess.getDataClassAccess().getRightCurlyBracketKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__0__Impl
	rule__DataElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getDataElementKeyword_0()); }
	'DataElement'
	{ after(grammarAccess.getDataElementAccess().getDataElementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__1__Impl
	rule__DataElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getStatusKeyword_1()); }
	'status:'
	{ after(grammarAccess.getDataElementAccess().getStatusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__2__Impl
	rule__DataElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getStatusAssignment_2()); }
	(rule__DataElement__StatusAssignment_2)
	{ after(grammarAccess.getDataElementAccess().getStatusAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__3__Impl
	rule__DataElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getDomainidKeyword_3()); }
	'domainid:'
	{ after(grammarAccess.getDataElementAccess().getDomainidKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__4__Impl
	rule__DataElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getGuidAssignment_4()); }
	(rule__DataElement__GuidAssignment_4)
	{ after(grammarAccess.getDataElementAccess().getGuidAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__5__Impl
	rule__DataElement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getCommercialAtKeyword_5()); }
	'@'
	{ after(grammarAccess.getDataElementAccess().getCommercialAtKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__6__Impl
	rule__DataElement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getDataElementAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__7__Impl
	rule__DataElement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getVersionParserRuleCall_7()); }
	ruleVersion
	{ after(grammarAccess.getDataElementAccess().getVersionParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__8__Impl
	rule__DataElement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getDataElementAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__9__Impl
	rule__DataElement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getRefinesAssignment_9()); }
	(rule__DataElement__RefinesAssignment_9)
	{ after(grammarAccess.getDataElementAccess().getRefinesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__10__Impl
	rule__DataElement__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getNameAssignment_10()); }
	(rule__DataElement__NameAssignment_10)
	{ after(grammarAccess.getDataElementAccess().getNameAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__11__Impl
	rule__DataElement__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getColonKeyword_11()); }
	':'
	{ after(grammarAccess.getDataElementAccess().getColonKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataElement__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataElementAccess().getTypeAssignment_12()); }
	(rule__DataElement__TypeAssignment_12)
	{ after(grammarAccess.getDataElementAccess().getTypeAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintAction_0()); }
	()
	{ after(grammarAccess.getConstraintAccess().getConstraintAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_1()); }
	'constraint'
	{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getNameAssignment_2()); }
	(rule__Constraint__NameAssignment_2)
	{ after(grammarAccess.getConstraintAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__3__Impl
	rule__Constraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getConstraintAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getGroup_4()); }
	(rule__Constraint__Group_4__0)
	{ after(grammarAccess.getConstraintAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_4__0__Impl
	rule__Constraint__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getGroup_4_0()); }
	(rule__Constraint__Group_4_0__0)?
	{ after(grammarAccess.getConstraintAccess().getGroup_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_4__1__Impl
	rule__Constraint__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getPredAssignment_4_1()); }
	(rule__Constraint__PredAssignment_4_1)
	{ after(grammarAccess.getConstraintAccess().getPredAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getGroup_4_2()); }
	(rule__Constraint__Group_4_2__0)?
	{ after(grammarAccess.getConstraintAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_4_0__0__Impl
	rule__Constraint__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getSrcAssignment_4_0_0()); }
	(rule__Constraint__SrcAssignment_4_0_0)
	{ after(grammarAccess.getConstraintAccess().getSrcAssignment_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getColonKeyword_4_0_1()); }
	':'
	{ after(grammarAccess.getConstraintAccess().getColonKeyword_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_4_2__0__Impl
	rule__Constraint__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getColonKeyword_4_2_0()); }
	':'
	{ after(grammarAccess.getConstraintAccess().getColonKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getDestAssignment_4_2_1()); }
	(rule__Constraint__DestAssignment_4_2_1)
	{ after(grammarAccess.getConstraintAccess().getDestAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__0__Impl
	rule__Predicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getPredicateKeyword_0()); }
	'predicate'
	{ after(grammarAccess.getPredicateAccess().getPredicateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__1__Impl
	rule__Predicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNameAssignment_1()); }
	(rule__Predicate__NameAssignment_1)
	{ after(grammarAccess.getPredicateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__2__Impl
	rule__Predicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getPredicateAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getPredicateAssignment_3()); }
	(rule__Predicate__PredicateAssignment_3)
	{ after(grammarAccess.getPredicateAccess().getPredicateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainRegistry__RegisteredItemsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainRegistryAccess().getRegisteredItemsDataModelParserRuleCall_0()); }
		ruleDataModel
		{ after(grammarAccess.getDomainRegistryAccess().getRegisteredItemsDataModelParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getDataModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__StatusAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getStatusStatusParserRuleCall_3_0()); }
		ruleStatus
		{ after(grammarAccess.getDataModelAccess().getStatusStatusParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__GuidAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getGuidGUIDParserRuleCall_5_0()); }
		ruleGUID
		{ after(grammarAccess.getDataModelAccess().getGuidGUIDParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__RefinesAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getRefinesREFINEParserRuleCall_10_0()); }
		ruleREFINE
		{ after(grammarAccess.getDataModelAccess().getRefinesREFINEParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__ElementsAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getElementsDataItemParserRuleCall_12_0()); }
		ruleDataItem
		{ after(grammarAccess.getDataModelAccess().getElementsDataItemParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__RelationsAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getRelationsRelationshipParserRuleCall_13_0()); }
		ruleRelationship
		{ after(grammarAccess.getDataModelAccess().getRelationsRelationshipParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__ConstraintAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getConstraintConstraintParserRuleCall_14_0()); }
		ruleConstraint
		{ after(grammarAccess.getDataModelAccess().getConstraintConstraintParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__PredicateAssignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataModelAccess().getPredicatePredicateParserRuleCall_15_0()); }
		rulePredicate
		{ after(grammarAccess.getDataModelAccess().getPredicatePredicateParserRuleCall_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataItem__DataitemAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataItemAccess().getDataitemAlternatives_0()); }
		(rule__DataItem__DataitemAlternatives_0)
		{ after(grammarAccess.getDataItemAccess().getDataitemAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getTypeDataItemCrossReference_3_0()); }
		(
			{ before(grammarAccess.getReferenceAccess().getTypeDataItemIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferenceAccess().getTypeDataItemIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getReferenceAccess().getTypeDataItemCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__SrcAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getSrcRelationSourceParserRuleCall_1_0_0()); }
		ruleRelationSource
		{ after(grammarAccess.getRelationshipAccess().getSrcRelationSourceParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__DestAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationshipAccess().getDestRelationDestinationParserRuleCall_1_2_0()); }
		ruleRelationDestination
		{ after(grammarAccess.getRelationshipAccess().getDestRelationDestinationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionItemAccess().getKeyIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExtensionItemAccess().getKeyIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionItem__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionItemAccess().getValueSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getExtensionItemAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__StatusAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratedTypeAccess().getStatusStatusParserRuleCall_2_0()); }
		ruleStatus
		{ after(grammarAccess.getEnumeratedTypeAccess().getStatusStatusParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__GuidAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratedTypeAccess().getGuidGUIDParserRuleCall_4_0()); }
		ruleGUID
		{ after(grammarAccess.getEnumeratedTypeAccess().getGuidGUIDParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__RefinesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratedTypeAccess().getRefinesREFINEParserRuleCall_9_0()); }
		ruleREFINE
		{ after(grammarAccess.getEnumeratedTypeAccess().getRefinesREFINEParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__NameAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratedTypeAccess().getNameQualifiedNameParserRuleCall_10_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getEnumeratedTypeAccess().getNameQualifiedNameParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__TypeAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratedTypeAccess().getTypePrimitiveTypeParserRuleCall_12_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getEnumeratedTypeAccess().getTypePrimitiveTypeParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__ArrayAssignment_13_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratedTypeAccess().getArrayLeftSquareBracketKeyword_13_0_0()); }
		(
			{ before(grammarAccess.getEnumeratedTypeAccess().getArrayLeftSquareBracketKeyword_13_0_0()); }
			'['
			{ after(grammarAccess.getEnumeratedTypeAccess().getArrayLeftSquareBracketKeyword_13_0_0()); }
		)
		{ after(grammarAccess.getEnumeratedTypeAccess().getArrayLeftSquareBracketKeyword_13_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumeratedType__LengthAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratedTypeAccess().getLengthINTTerminalRuleCall_13_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEnumeratedTypeAccess().getLengthINTTerminalRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__StatusAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceTypeAccess().getStatusStatusParserRuleCall_2_0()); }
		ruleStatus
		{ after(grammarAccess.getReferenceTypeAccess().getStatusStatusParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__GuidAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceTypeAccess().getGuidGUIDParserRuleCall_4_0()); }
		ruleGUID
		{ after(grammarAccess.getReferenceTypeAccess().getGuidGUIDParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__RefinesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceTypeAccess().getRefinesREFINEParserRuleCall_9_0()); }
		ruleREFINE
		{ after(grammarAccess.getReferenceTypeAccess().getRefinesREFINEParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__NameAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceTypeAccess().getNameQualifiedNameParserRuleCall_10_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getReferenceTypeAccess().getNameQualifiedNameParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__TypeAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceTypeAccess().getTypeDataClassCrossReference_12_0()); }
		(
			{ before(grammarAccess.getReferenceTypeAccess().getTypeDataClassIDTerminalRuleCall_12_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReferenceTypeAccess().getTypeDataClassIDTerminalRuleCall_12_0_1()); }
		)
		{ after(grammarAccess.getReferenceTypeAccess().getTypeDataClassCrossReference_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__StatusAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getStatusStatusParserRuleCall_1_2_0()); }
		ruleStatus
		{ after(grammarAccess.getPrimitiveTypeAccess().getStatusStatusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__GuidAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGuidGUIDParserRuleCall_1_4_0()); }
		ruleGUID
		{ after(grammarAccess.getPrimitiveTypeAccess().getGuidGUIDParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__RefinesAssignment_1_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getRefinesREFINEParserRuleCall_1_9_0()); }
		ruleREFINE
		{ after(grammarAccess.getPrimitiveTypeAccess().getRefinesREFINEParserRuleCall_1_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__NameAssignment_1_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getNameQualifiedNameParserRuleCall_1_10_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPrimitiveTypeAccess().getNameQualifiedNameParserRuleCall_1_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__TypeAssignment_1_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getTypeBasicParserRuleCall_1_12_0()); }
		ruleBasic
		{ after(grammarAccess.getPrimitiveTypeAccess().getTypeBasicParserRuleCall_1_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__RuleAssignment_1_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getRuleConstraintCrossReference_1_13_0()); }
		(
			{ before(grammarAccess.getPrimitiveTypeAccess().getRuleConstraintIDTerminalRuleCall_1_13_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimitiveTypeAccess().getRuleConstraintIDTerminalRuleCall_1_13_0_1()); }
		)
		{ after(grammarAccess.getPrimitiveTypeAccess().getRuleConstraintCrossReference_1_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Basic__TypenameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicAccess().getTypenameAlternatives_0()); }
		(rule__Basic__TypenameAlternatives_0)
		{ after(grammarAccess.getBasicAccess().getTypenameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__StatusAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataClassAccess().getStatusStatusParserRuleCall_2_0()); }
		ruleStatus
		{ after(grammarAccess.getDataClassAccess().getStatusStatusParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__GuidAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataClassAccess().getGuidGUIDParserRuleCall_4_0()); }
		ruleGUID
		{ after(grammarAccess.getDataClassAccess().getGuidGUIDParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__RefinesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataClassAccess().getRefinesREFINEParserRuleCall_9_0()); }
		ruleREFINE
		{ after(grammarAccess.getDataClassAccess().getRefinesREFINEParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__NameAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataClassAccess().getNameQualifiedNameParserRuleCall_10_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getDataClassAccess().getNameQualifiedNameParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__DataelementsAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataClassAccess().getDataelementsContainerElementParserRuleCall_12_0()); }
		ruleContainerElement
		{ after(grammarAccess.getDataClassAccess().getDataelementsContainerElementParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataClass__ExtensionAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataClassAccess().getExtensionExtensionItemParserRuleCall_13_0()); }
		ruleExtensionItem
		{ after(grammarAccess.getDataClassAccess().getExtensionExtensionItemParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__StatusAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataElementAccess().getStatusStatusParserRuleCall_2_0()); }
		ruleStatus
		{ after(grammarAccess.getDataElementAccess().getStatusStatusParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__GuidAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataElementAccess().getGuidGUIDParserRuleCall_4_0()); }
		ruleGUID
		{ after(grammarAccess.getDataElementAccess().getGuidGUIDParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__RefinesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataElementAccess().getRefinesREFINEParserRuleCall_9_0()); }
		ruleREFINE
		{ after(grammarAccess.getDataElementAccess().getRefinesREFINEParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__NameAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataElementAccess().getNameQualifiedNameParserRuleCall_10_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getDataElementAccess().getNameQualifiedNameParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__TypeAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataElementAccess().getTypeDataTypeCrossReference_12_0()); }
		(
			{ before(grammarAccess.getDataElementAccess().getTypeDataTypeQualifiedNameParserRuleCall_12_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getDataElementAccess().getTypeDataTypeQualifiedNameParserRuleCall_12_0_1()); }
		)
		{ after(grammarAccess.getDataElementAccess().getTypeDataTypeCrossReference_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getNameQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getConstraintAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__SrcAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getSrcDataElementParserRuleCall_4_0_0_0()); }
		ruleDataElement
		{ after(grammarAccess.getConstraintAccess().getSrcDataElementParserRuleCall_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__PredAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getPredPredicateCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getConstraintAccess().getPredPredicateIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConstraintAccess().getPredPredicateIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getConstraintAccess().getPredPredicateCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__DestAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getDestDataElementParserRuleCall_4_2_1_0()); }
		ruleDataElement
		{ after(grammarAccess.getConstraintAccess().getDestDataElementParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPredicateAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__PredicateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getPredicateSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getPredicateAccess().getPredicateSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
