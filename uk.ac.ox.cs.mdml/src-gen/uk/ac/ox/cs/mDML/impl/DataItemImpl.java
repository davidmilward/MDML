/**
 * generated by Xtext 2.12.0
 */
package uk.ac.ox.cs.mDML.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.ox.cs.mDML.DataItem;
import uk.ac.ox.cs.mDML.MDMLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Data Item</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.ox.cs.mDML.impl.DataItemImpl#getDataitem <em>Dataitem</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DataItemImpl extends MinimalEObjectImpl.Container implements DataItem
{
  /**
   * The cached value of the '{@link #getDataitem() <em>Dataitem</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataitem()
   * @generated
   * @ordered
   */
  protected EObject dataitem;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataItemImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MDMLPackage.Literals.DATA_ITEM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getDataitem()
  {
    return dataitem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDataitem(EObject newDataitem, NotificationChain msgs)
  {
    EObject oldDataitem = dataitem;
    dataitem = newDataitem;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MDMLPackage.DATA_ITEM__DATAITEM, oldDataitem, newDataitem);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDataitem(EObject newDataitem)
  {
    if (newDataitem != dataitem)
    {
      NotificationChain msgs = null;
      if (dataitem != null)
        msgs = ((InternalEObject)dataitem).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MDMLPackage.DATA_ITEM__DATAITEM, null, msgs);
      if (newDataitem != null)
        msgs = ((InternalEObject)newDataitem).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MDMLPackage.DATA_ITEM__DATAITEM, null, msgs);
      msgs = basicSetDataitem(newDataitem, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MDMLPackage.DATA_ITEM__DATAITEM, newDataitem, newDataitem));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MDMLPackage.DATA_ITEM__DATAITEM:
        return basicSetDataitem(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MDMLPackage.DATA_ITEM__DATAITEM:
        return getDataitem();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MDMLPackage.DATA_ITEM__DATAITEM:
        setDataitem((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MDMLPackage.DATA_ITEM__DATAITEM:
        setDataitem((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MDMLPackage.DATA_ITEM__DATAITEM:
        return dataitem != null;
    }
    return super.eIsSet(featureID);
  }

} //DataItemImpl
