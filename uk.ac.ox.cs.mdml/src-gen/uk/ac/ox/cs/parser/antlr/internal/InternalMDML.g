/*
 * generated by Xtext 2.12.0
 */
grammar InternalMDML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package uk.ac.ox.cs.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uk.ac.ox.cs.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uk.ac.ox.cs.services.MDMLGrammarAccess;

}

@parser::members {

 	private MDMLGrammarAccess grammarAccess;

    public InternalMDMLParser(TokenStream input, MDMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DomainRegistry";
   	}

   	@Override
   	protected MDMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDomainRegistry
entryRuleDomainRegistry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainRegistryRule()); }
	iv_ruleDomainRegistry=ruleDomainRegistry
	{ $current=$iv_ruleDomainRegistry.current; }
	EOF;

// Rule DomainRegistry
ruleDomainRegistry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDomainRegistryAccess().getRegisteredItemsDataModelParserRuleCall_0());
			}
			lv_registeredItems_0_0=ruleDataModel
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDomainRegistryRule());
				}
				add(
					$current,
					"registeredItems",
					lv_registeredItems_0_0,
					"uk.ac.ox.cs.MDML.DataModel");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleDataModel
entryRuleDataModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataModelRule()); }
	iv_ruleDataModel=ruleDataModel
	{ $current=$iv_ruleDataModel.current; }
	EOF;

// Rule DataModel
ruleDataModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DataModel'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataModelAccess().getDataModelKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uk.ac.ox.cs.MDML.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='status:'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataModelAccess().getStatusKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getStatusStatusParserRuleCall_3_0());
				}
				lv_status_3_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					set(
						$current,
						"status",
						lv_status_3_0,
						"uk.ac.ox.cs.MDML.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='domainid:'
		{
			newLeafNode(otherlv_4, grammarAccess.getDataModelAccess().getDomainidKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getGuidGUIDParserRuleCall_5_0());
				}
				lv_guid_5_0=ruleGUID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					set(
						$current,
						"guid",
						lv_guid_5_0,
						"uk.ac.ox.cs.MDML.GUID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='@'
		{
			newLeafNode(otherlv_6, grammarAccess.getDataModelAccess().getCommercialAtKeyword_6());
		}
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getDataModelAccess().getLeftParenthesisKeyword_7());
		}
		{
			newCompositeNode(grammarAccess.getDataModelAccess().getVersionParserRuleCall_8());
		}
		ruleVersion
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getDataModelAccess().getRightParenthesisKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getRefinesREFINEParserRuleCall_10_0());
				}
				lv_refines_10_0=ruleREFINE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					set(
						$current,
						"refines",
						lv_refines_10_0,
						"uk.ac.ox.cs.MDML.REFINE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getElementsDataItemParserRuleCall_12_0());
				}
				lv_elements_12_0=ruleDataItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_12_0,
						"uk.ac.ox.cs.MDML.DataItem");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getRelationsRelationshipParserRuleCall_13_0());
				}
				lv_relations_13_0=ruleRelationship
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"relations",
						lv_relations_13_0,
						"uk.ac.ox.cs.MDML.Relationship");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getConstraintConstraintParserRuleCall_14_0());
				}
				lv_constraint_14_0=ruleConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"constraint",
						lv_constraint_14_0,
						"uk.ac.ox.cs.MDML.Constraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDataModelAccess().getPredicatePredicateParserRuleCall_15_0());
				}
				lv_predicate_15_0=rulePredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataModelRule());
					}
					add(
						$current,
						"predicate",
						lv_predicate_15_0,
						"uk.ac.ox.cs.MDML.Predicate");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_16());
		}
	)
;

// Entry rule entryRuleDataItem
entryRuleDataItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataItemRule()); }
	iv_ruleDataItem=ruleDataItem
	{ $current=$iv_ruleDataItem.current; }
	EOF;

// Rule DataItem
ruleDataItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataItemAccess().getDataitemDataModelParserRuleCall_0_0());
				}
				lv_dataitem_0_1=ruleDataModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataItemRule());
					}
					set(
						$current,
						"dataitem",
						lv_dataitem_0_1,
						"uk.ac.ox.cs.MDML.DataModel");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getDataItemAccess().getDataitemDataClassParserRuleCall_0_1());
				}
				lv_dataitem_0_2=ruleDataClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataItemRule());
					}
					set(
						$current,
						"dataitem",
						lv_dataitem_0_2,
						"uk.ac.ox.cs.MDML.DataClass");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getDataItemAccess().getDataitemDataElementParserRuleCall_0_2());
				}
				lv_dataitem_0_3=ruleDataElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataItemRule());
					}
					set(
						$current,
						"dataitem",
						lv_dataitem_0_3,
						"uk.ac.ox.cs.MDML.DataElement");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getDataItemAccess().getDataitemDataTypeParserRuleCall_0_3());
				}
				lv_dataitem_0_4=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataItemRule());
					}
					set(
						$current,
						"dataitem",
						lv_dataitem_0_4,
						"uk.ac.ox.cs.MDML.DataType");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getDataItemAccess().getDataitemImportParserRuleCall_0_4());
				}
				lv_dataitem_0_5=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataItemRule());
					}
					set(
						$current,
						"dataitem",
						lv_dataitem_0_5,
						"uk.ac.ox.cs.MDML.Import");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getDataItemAccess().getDataitemExtensionItemParserRuleCall_0_5());
				}
				lv_dataitem_0_6=ruleExtensionItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataItemRule());
					}
					set(
						$current,
						"dataitem",
						lv_dataitem_0_6,
						"uk.ac.ox.cs.MDML.ExtensionItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleREFINE
entryRuleREFINE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getREFINERule()); }
	iv_ruleREFINE=ruleREFINE
	{ $current=$iv_ruleREFINE.current.getText(); }
	EOF;

// Rule REFINE
ruleREFINE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getREFINEAccess().getREFINESParserRuleCall_0());
		}
		this_REFINES_0=ruleREFINES
		{
			$current.merge(this_REFINES_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getREFINEAccess().getDOESNOTREFINEParserRuleCall_1());
		}
		this_DOESNOTREFINE_1=ruleDOESNOTREFINE
		{
			$current.merge(this_DOESNOTREFINE_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)?
;

// Entry rule entryRuleREFINES
entryRuleREFINES returns [String current=null]:
	{ newCompositeNode(grammarAccess.getREFINESRule()); }
	iv_ruleREFINES=ruleREFINES
	{ $current=$iv_ruleREFINES.current.getText(); }
	EOF;

// Rule REFINES
ruleREFINES returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='refines'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREFINESAccess().getRefinesKeyword_0());
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREFINESAccess().getColonKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getREFINESAccess().getPathParserRuleCall_2());
		}
		this_Path_2=rulePath
		{
			$current.merge(this_Path_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDOESNOTREFINE
entryRuleDOESNOTREFINE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDOESNOTREFINERule()); }
	iv_ruleDOESNOTREFINE=ruleDOESNOTREFINE
	{ $current=$iv_ruleDOESNOTREFINE.current.getText(); }
	EOF;

// Rule DOESNOTREFINE
ruleDOESNOTREFINE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='doesnotrefine'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOESNOTREFINEAccess().getDoesnotrefineKeyword_0());
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOESNOTREFINEAccess().getColonKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getDOESNOTREFINEAccess().getPathParserRuleCall_2());
		}
		this_Path_2=rulePath
		{
			$current.merge(this_Path_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRulePath
entryRulePath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current.getText(); }
	EOF;

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='/'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getPathAccess().getQualifiedNameParserRuleCall_1_1());
			}
			this_QualifiedName_2=ruleQualifiedName
			{
				$current.merge(this_QualifiedName_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleGUID
entryRuleGUID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getGUIDRule()); }
	iv_ruleGUID=ruleGUID
	{ $current=$iv_ruleGUID.current.getText(); }
	EOF;

// Rule GUID
ruleGUID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getGUIDAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getGUIDAccess().getFullStopKeyword_1_0_0());
				}
				this_ID_2=RULE_ID
				{
					$current.merge(this_ID_2);
				}
				{
					newLeafNode(this_ID_2, grammarAccess.getGUIDAccess().getIDTerminalRuleCall_1_0_1());
				}
			)
			    |
			(
				kw='/'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getGUIDAccess().getSolidusKeyword_1_1_0());
				}
				this_ID_4=RULE_ID
				{
					$current.merge(this_ID_4);
				}
				{
					newLeafNode(this_ID_4, grammarAccess.getGUIDAccess().getIDTerminalRuleCall_1_1_1());
				}
			)
		)*
	)
;

// Entry rule entryRuleVersion
entryRuleVersion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	iv_ruleVersion=ruleVersion
	{ $current=$iv_ruleVersion.current.getText(); }
	EOF;

// Rule Version
ruleVersion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getVersionAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVersionAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getVersionAccess().getINTTerminalRuleCall_2());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVersionAccess().getFullStopKeyword_3());
		}
		this_INT_4=RULE_INT
		{
			$current.merge(this_INT_4);
		}
		{
			newLeafNode(this_INT_4, grammarAccess.getVersionAccess().getINTTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getRefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getTypeDataItemCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleRelationSource
entryRuleRelationSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationSourceRule()); }
	iv_ruleRelationSource=ruleRelationSource
	{ $current=$iv_ruleRelationSource.current; }
	EOF;

// Rule RelationSource
ruleRelationSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationSourceAccess().getDataModelParserRuleCall_0());
		}
		this_DataModel_0=ruleDataModel
		{
			$current = $this_DataModel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationSourceAccess().getDataClassParserRuleCall_1());
		}
		this_DataClass_1=ruleDataClass
		{
			$current = $this_DataClass_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationSourceAccess().getDataElementParserRuleCall_2());
		}
		this_DataElement_2=ruleDataElement
		{
			$current = $this_DataElement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationSourceAccess().getDataTypeParserRuleCall_3());
		}
		this_DataType_3=ruleDataType
		{
			$current = $this_DataType_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRelationDestination
entryRuleRelationDestination returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationDestinationRule()); }
	iv_ruleRelationDestination=ruleRelationDestination
	{ $current=$iv_ruleRelationDestination.current; }
	EOF;

// Rule RelationDestination
ruleRelationDestination returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationDestinationAccess().getDataModelParserRuleCall_0());
		}
		this_DataModel_0=ruleDataModel
		{
			$current = $this_DataModel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationDestinationAccess().getDataClassParserRuleCall_1());
		}
		this_DataClass_1=ruleDataClass
		{
			$current = $this_DataClass_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationDestinationAccess().getDataElementParserRuleCall_2());
		}
		this_DataElement_2=ruleDataElement
		{
			$current = $this_DataElement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationDestinationAccess().getDataTypeParserRuleCall_3());
		}
		this_DataType_3=ruleDataType
		{
			$current = $this_DataType_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRelationship
entryRuleRelationship returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipRule()); }
	iv_ruleRelationship=ruleRelationship
	{ $current=$iv_ruleRelationship.current; }
	EOF;

// Rule Relationship
ruleRelationship returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='relationship'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelationshipAccess().getRelationshipKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationshipAccess().getSrcRelationSourceParserRuleCall_1_0_0());
					}
					lv_src_1_0=ruleRelationSource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationshipRule());
						}
						set(
							$current,
							"src",
							lv_src_1_0,
							"uk.ac.ox.cs.MDML.RelationSource");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getRelationshipAccess().getColonKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationshipAccess().getDestRelationDestinationParserRuleCall_1_2_0());
					}
					lv_dest_3_0=ruleRelationDestination
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationshipRule());
						}
						set(
							$current,
							"dest",
							lv_dest_3_0,
							"uk.ac.ox.cs.MDML.RelationDestination");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExtensionItem
entryRuleExtensionItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtensionItemRule()); }
	iv_ruleExtensionItem=ruleExtensionItem
	{ $current=$iv_ruleExtensionItem.current; }
	EOF;

// Rule ExtensionItem
ruleExtensionItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extension'
		{
			newLeafNode(otherlv_0, grammarAccess.getExtensionItemAccess().getExtensionKeyword_0());
		}
		(
			(
				lv_key_1_0=RULE_ID
				{
					newLeafNode(lv_key_1_0, grammarAccess.getExtensionItemAccess().getKeyIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtensionItemRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getExtensionItemAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_STRING
				{
					newLeafNode(lv_value_3_0, grammarAccess.getExtensionItemAccess().getValueSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtensionItemRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getExtensionItemAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"uk.ac.ox.cs.MDML.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getPrimitiveTypeParserRuleCall_0());
		}
		this_PrimitiveType_0=rulePrimitiveType
		{
			$current = $this_PrimitiveType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getReferenceTypeParserRuleCall_1());
		}
		this_ReferenceType_1=ruleReferenceType
		{
			$current = $this_ReferenceType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDataTypeAccess().getEnumeratedTypeParserRuleCall_2());
		}
		this_EnumeratedType_2=ruleEnumeratedType
		{
			$current = $this_EnumeratedType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEnumeratedType
entryRuleEnumeratedType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumeratedTypeRule()); }
	iv_ruleEnumeratedType=ruleEnumeratedType
	{ $current=$iv_ruleEnumeratedType.current; }
	EOF;

// Rule EnumeratedType
ruleEnumeratedType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enumtype'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumeratedTypeAccess().getEnumtypeKeyword_0());
		}
		otherlv_1='status:'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumeratedTypeAccess().getStatusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumeratedTypeAccess().getStatusStatusParserRuleCall_2_0());
				}
				lv_status_2_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumeratedTypeRule());
					}
					set(
						$current,
						"status",
						lv_status_2_0,
						"uk.ac.ox.cs.MDML.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='domainid:'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumeratedTypeAccess().getDomainidKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumeratedTypeAccess().getGuidGUIDParserRuleCall_4_0());
				}
				lv_guid_4_0=ruleGUID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumeratedTypeRule());
					}
					set(
						$current,
						"guid",
						lv_guid_4_0,
						"uk.ac.ox.cs.MDML.GUID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='@'
		{
			newLeafNode(otherlv_5, grammarAccess.getEnumeratedTypeAccess().getCommercialAtKeyword_5());
		}
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getEnumeratedTypeAccess().getLeftParenthesisKeyword_6());
		}
		{
			newCompositeNode(grammarAccess.getEnumeratedTypeAccess().getVersionParserRuleCall_7());
		}
		ruleVersion
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getEnumeratedTypeAccess().getRightParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumeratedTypeAccess().getRefinesREFINEParserRuleCall_9_0());
				}
				lv_refines_9_0=ruleREFINE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumeratedTypeRule());
					}
					set(
						$current,
						"refines",
						lv_refines_9_0,
						"uk.ac.ox.cs.MDML.REFINE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumeratedTypeAccess().getNameQualifiedNameParserRuleCall_10_0());
				}
				lv_name_10_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumeratedTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_10_0,
						"uk.ac.ox.cs.MDML.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getEnumeratedTypeAccess().getColonKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumeratedTypeAccess().getTypePrimitiveTypeParserRuleCall_12_0());
				}
				lv_type_12_0=rulePrimitiveType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumeratedTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_12_0,
						"uk.ac.ox.cs.MDML.PrimitiveType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_array_13_0='['
					{
						newLeafNode(lv_array_13_0, grammarAccess.getEnumeratedTypeAccess().getArrayLeftSquareBracketKeyword_13_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumeratedTypeRule());
						}
						setWithLastConsumed($current, "array", true, "[");
					}
				)
			)
			(
				(
					lv_length_14_0=RULE_INT
					{
						newLeafNode(lv_length_14_0, grammarAccess.getEnumeratedTypeAccess().getLengthINTTerminalRuleCall_13_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumeratedTypeRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_14_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)?
			otherlv_15=']'
			{
				newLeafNode(otherlv_15, grammarAccess.getEnumeratedTypeAccess().getRightSquareBracketKeyword_13_2());
			}
		)?
	)
;

// Entry rule entryRuleReferenceType
entryRuleReferenceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceTypeRule()); }
	iv_ruleReferenceType=ruleReferenceType
	{ $current=$iv_ruleReferenceType.current; }
	EOF;

// Rule ReferenceType
ruleReferenceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='reftype'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceTypeAccess().getReftypeKeyword_0());
		}
		otherlv_1='status:'
		{
			newLeafNode(otherlv_1, grammarAccess.getReferenceTypeAccess().getStatusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceTypeAccess().getStatusStatusParserRuleCall_2_0());
				}
				lv_status_2_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceTypeRule());
					}
					set(
						$current,
						"status",
						lv_status_2_0,
						"uk.ac.ox.cs.MDML.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='domainid:'
		{
			newLeafNode(otherlv_3, grammarAccess.getReferenceTypeAccess().getDomainidKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceTypeAccess().getGuidGUIDParserRuleCall_4_0());
				}
				lv_guid_4_0=ruleGUID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceTypeRule());
					}
					set(
						$current,
						"guid",
						lv_guid_4_0,
						"uk.ac.ox.cs.MDML.GUID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='@'
		{
			newLeafNode(otherlv_5, grammarAccess.getReferenceTypeAccess().getCommercialAtKeyword_5());
		}
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getReferenceTypeAccess().getLeftParenthesisKeyword_6());
		}
		{
			newCompositeNode(grammarAccess.getReferenceTypeAccess().getVersionParserRuleCall_7());
		}
		ruleVersion
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getReferenceTypeAccess().getRightParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceTypeAccess().getRefinesREFINEParserRuleCall_9_0());
				}
				lv_refines_9_0=ruleREFINE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceTypeRule());
					}
					set(
						$current,
						"refines",
						lv_refines_9_0,
						"uk.ac.ox.cs.MDML.REFINE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceTypeAccess().getNameQualifiedNameParserRuleCall_10_0());
				}
				lv_name_10_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_10_0,
						"uk.ac.ox.cs.MDML.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getReferenceTypeAccess().getColonKeyword_11());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceTypeRule());
					}
				}
				otherlv_12=RULE_ID
				{
					newLeafNode(otherlv_12, grammarAccess.getReferenceTypeAccess().getTypeDataClassCrossReference_12_0());
				}
			)
		)
	)
;

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	iv_rulePrimitiveType=rulePrimitiveType
	{ $current=$iv_rulePrimitiveType.current; }
	EOF;

// Rule PrimitiveType
rulePrimitiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeAction_0(),
					$current);
			}
		)
		(
			otherlv_1='datatype'
			{
				newLeafNode(otherlv_1, grammarAccess.getPrimitiveTypeAccess().getDatatypeKeyword_1_0());
			}
			otherlv_2='status:'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimitiveTypeAccess().getStatusKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getStatusStatusParserRuleCall_1_2_0());
					}
					lv_status_3_0=ruleStatus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
						}
						set(
							$current,
							"status",
							lv_status_3_0,
							"uk.ac.ox.cs.MDML.Status");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='domainid:'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimitiveTypeAccess().getDomainidKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getGuidGUIDParserRuleCall_1_4_0());
					}
					lv_guid_5_0=ruleGUID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
						}
						set(
							$current,
							"guid",
							lv_guid_5_0,
							"uk.ac.ox.cs.MDML.GUID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='@'
			{
				newLeafNode(otherlv_6, grammarAccess.getPrimitiveTypeAccess().getCommercialAtKeyword_1_5());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimitiveTypeAccess().getLeftParenthesisKeyword_1_6());
			}
			{
				newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getVersionParserRuleCall_1_7());
			}
			ruleVersion
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getPrimitiveTypeAccess().getRightParenthesisKeyword_1_8());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getRefinesREFINEParserRuleCall_1_9_0());
					}
					lv_refines_10_0=ruleREFINE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
						}
						set(
							$current,
							"refines",
							lv_refines_10_0,
							"uk.ac.ox.cs.MDML.REFINE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getNameQualifiedNameParserRuleCall_1_10_0());
					}
					lv_name_11_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
						}
						set(
							$current,
							"name",
							lv_name_11_0,
							"uk.ac.ox.cs.MDML.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12=':'
			{
				newLeafNode(otherlv_12, grammarAccess.getPrimitiveTypeAccess().getColonKeyword_1_11());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getTypeBasicParserRuleCall_1_12_0());
					}
					lv_type_13_0=ruleBasic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
						}
						set(
							$current,
							"type",
							lv_type_13_0,
							"uk.ac.ox.cs.MDML.Basic");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
						}
					}
					otherlv_14=RULE_ID
					{
						newLeafNode(otherlv_14, grammarAccess.getPrimitiveTypeAccess().getRuleConstraintCrossReference_1_13_0());
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleBasic
entryRuleBasic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicRule()); }
	iv_ruleBasic=ruleBasic
	{ $current=$iv_ruleBasic.current; }
	EOF;

// Rule Basic
ruleBasic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typename_0_1='STRING'
				{
					newLeafNode(lv_typename_0_1, grammarAccess.getBasicAccess().getTypenameSTRINGKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicRule());
					}
					setWithLastConsumed($current, "typename", lv_typename_0_1, null);
				}
				    |
				lv_typename_0_2='INT'
				{
					newLeafNode(lv_typename_0_2, grammarAccess.getBasicAccess().getTypenameINTKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicRule());
					}
					setWithLastConsumed($current, "typename", lv_typename_0_2, null);
				}
				    |
				lv_typename_0_3='BOOLEAN'
				{
					newLeafNode(lv_typename_0_3, grammarAccess.getBasicAccess().getTypenameBOOLEANKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicRule());
					}
					setWithLastConsumed($current, "typename", lv_typename_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRuleContainerElement
entryRuleContainerElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContainerElementRule()); }
	iv_ruleContainerElement=ruleContainerElement
	{ $current=$iv_ruleContainerElement.current; }
	EOF;

// Rule ContainerElement
ruleContainerElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getContainerElementAccess().getDataClassParserRuleCall_0());
		}
		this_DataClass_0=ruleDataClass
		{
			$current = $this_DataClass_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContainerElementAccess().getDataElementParserRuleCall_1());
		}
		this_DataElement_1=ruleDataElement
		{
			$current = $this_DataElement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContainerElementAccess().getReferenceParserRuleCall_2());
		}
		this_Reference_2=ruleReference
		{
			$current = $this_Reference_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataClass
entryRuleDataClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataClassRule()); }
	iv_ruleDataClass=ruleDataClass
	{ $current=$iv_ruleDataClass.current; }
	EOF;

// Rule DataClass
ruleDataClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DataClass'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataClassAccess().getDataClassKeyword_0());
		}
		otherlv_1='status:'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataClassAccess().getStatusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataClassAccess().getStatusStatusParserRuleCall_2_0());
				}
				lv_status_2_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataClassRule());
					}
					set(
						$current,
						"status",
						lv_status_2_0,
						"uk.ac.ox.cs.MDML.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='domainid:'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataClassAccess().getDomainidKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataClassAccess().getGuidGUIDParserRuleCall_4_0());
				}
				lv_guid_4_0=ruleGUID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataClassRule());
					}
					set(
						$current,
						"guid",
						lv_guid_4_0,
						"uk.ac.ox.cs.MDML.GUID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='@'
		{
			newLeafNode(otherlv_5, grammarAccess.getDataClassAccess().getCommercialAtKeyword_5());
		}
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getDataClassAccess().getLeftParenthesisKeyword_6());
		}
		{
			newCompositeNode(grammarAccess.getDataClassAccess().getVersionParserRuleCall_7());
		}
		ruleVersion
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getDataClassAccess().getRightParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataClassAccess().getRefinesREFINEParserRuleCall_9_0());
				}
				lv_refines_9_0=ruleREFINE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataClassRule());
					}
					set(
						$current,
						"refines",
						lv_refines_9_0,
						"uk.ac.ox.cs.MDML.REFINE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataClassAccess().getNameQualifiedNameParserRuleCall_10_0());
				}
				lv_name_10_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataClassRule());
					}
					set(
						$current,
						"name",
						lv_name_10_0,
						"uk.ac.ox.cs.MDML.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getDataClassAccess().getLeftCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataClassAccess().getDataelementsContainerElementParserRuleCall_12_0());
				}
				lv_dataelements_12_0=ruleContainerElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataClassRule());
					}
					add(
						$current,
						"dataelements",
						lv_dataelements_12_0,
						"uk.ac.ox.cs.MDML.ContainerElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDataClassAccess().getExtensionExtensionItemParserRuleCall_13_0());
				}
				lv_extension_13_0=ruleExtensionItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataClassRule());
					}
					add(
						$current,
						"extension",
						lv_extension_13_0,
						"uk.ac.ox.cs.MDML.ExtensionItem");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getDataClassAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleDataElement
entryRuleDataElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataElementRule()); }
	iv_ruleDataElement=ruleDataElement
	{ $current=$iv_ruleDataElement.current; }
	EOF;

// Rule DataElement
ruleDataElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DataElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataElementAccess().getDataElementKeyword_0());
		}
		otherlv_1='status:'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataElementAccess().getStatusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataElementAccess().getStatusStatusParserRuleCall_2_0());
				}
				lv_status_2_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataElementRule());
					}
					set(
						$current,
						"status",
						lv_status_2_0,
						"uk.ac.ox.cs.MDML.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='domainid:'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataElementAccess().getDomainidKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataElementAccess().getGuidGUIDParserRuleCall_4_0());
				}
				lv_guid_4_0=ruleGUID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataElementRule());
					}
					set(
						$current,
						"guid",
						lv_guid_4_0,
						"uk.ac.ox.cs.MDML.GUID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='@'
		{
			newLeafNode(otherlv_5, grammarAccess.getDataElementAccess().getCommercialAtKeyword_5());
		}
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getDataElementAccess().getLeftParenthesisKeyword_6());
		}
		{
			newCompositeNode(grammarAccess.getDataElementAccess().getVersionParserRuleCall_7());
		}
		ruleVersion
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getDataElementAccess().getRightParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataElementAccess().getRefinesREFINEParserRuleCall_9_0());
				}
				lv_refines_9_0=ruleREFINE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataElementRule());
					}
					set(
						$current,
						"refines",
						lv_refines_9_0,
						"uk.ac.ox.cs.MDML.REFINE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataElementAccess().getNameQualifiedNameParserRuleCall_10_0());
				}
				lv_name_10_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataElementRule());
					}
					set(
						$current,
						"name",
						lv_name_10_0,
						"uk.ac.ox.cs.MDML.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getDataElementAccess().getColonKeyword_11());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataElementRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDataElementAccess().getTypeDataTypeCrossReference_12_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatus
entryRuleStatus returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStatusRule()); }
	iv_ruleStatus=ruleStatus
	{ $current=$iv_ruleStatus.current.getText(); }
	EOF;

// Rule Status
ruleStatus returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='draft'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStatusAccess().getDraftKeyword_0());
		}
		    |
		kw='finalized'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStatusAccess().getFinalizedKeyword_1());
		}
		    |
		kw='superceded'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStatusAccess().getSupercededKeyword_2());
		}
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstraintAccess().getConstraintAction_0(),
					$current);
			}
		)
		otherlv_1='constraint'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstraintAccess().getConstraintKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintAccess().getNameQualifiedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"uk.ac.ox.cs.MDML.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getConstraintAccess().getEqualsSignKeyword_3());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintAccess().getSrcDataElementParserRuleCall_4_0_0_0());
						}
						lv_src_4_0=ruleDataElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintRule());
							}
							set(
								$current,
								"src",
								lv_src_4_0,
								"uk.ac.ox.cs.MDML.DataElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getConstraintAccess().getColonKeyword_4_0_1());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstraintRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getConstraintAccess().getPredPredicateCrossReference_4_1_0());
					}
				)
			)
			(
				otherlv_7=':'
				{
					newLeafNode(otherlv_7, grammarAccess.getConstraintAccess().getColonKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintAccess().getDestDataElementParserRuleCall_4_2_1_0());
						}
						lv_dest_8_0=ruleDataElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintRule());
							}
							set(
								$current,
								"dest",
								lv_dest_8_0,
								"uk.ac.ox.cs.MDML.DataElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	iv_rulePredicate=rulePredicate
	{ $current=$iv_rulePredicate.current; }
	EOF;

// Rule Predicate
rulePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='predicate'
		{
			newLeafNode(otherlv_0, grammarAccess.getPredicateAccess().getPredicateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPredicateAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPredicateRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uk.ac.ox.cs.MDML.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPredicateAccess().getColonKeyword_2());
		}
		(
			(
				lv_predicate_3_0=RULE_STRING
				{
					newLeafNode(lv_predicate_3_0, grammarAccess.getPredicateAccess().getPredicateSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
